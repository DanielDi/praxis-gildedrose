pipeline {
    agent any
    stages{
        stage('Delete backend image') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q danieldi/backend)" != "" ]]; then
                        docker stop back-end
                        docker rm back-end
                    fi
                    '''.stripIndent()
                )
            }
        }
        stage('Delete frontend image') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q danieldi/front)" != "" ]]; then
                        docker stop front-end
                        docker rm front-end
                    fi
                    '''.stripIndent()
                )
            }
        }
        # stage('Create Network') {
        #     steps {
        #         sh(returnStdout: true, script: '''#!/bin/bash
        #             if [[ "$(docker network ls | grep my-net )" == "" ]] ; then
        #                 docker network create --subnet=122.22.0.0/16 my-net
        #             fi
        #             '''.stripIndent()
        #         )

        #     }
        # }
        # stage('Run postgres') {
        #     steps {
        #         sh 'docker run --name my-postgres --network="my-net" --ip 122.22.0.2 -e POSTGRES_PASSWORD=secret -p 5432:5432 -d postgres'
        #     }
        # }
        stage('Run backend') {
            steps {
                sh 'docker run --name back-end -e DB_HOST=group7-rds.cqqmj66dxtlw.us-east-1.rds.amazonaws.com -p 8090:8080 -d danieldi/backend'
            }
        }
        stage('Run frontend') {
            steps {
                sh 'docker run --name front-end -p 4200:4200 -d danieldi/front'
            }
        }
    }
}