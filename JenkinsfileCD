pipeline {
    agent any
    stages{
        stage('Delete postgres image') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q postgres)" != "" ]]; then
                        docker stop my-postgres
                        docker rm my-postgres
                        docker rmi postgres
                    fi
                    '''.stripIndent()
                )
            }
        }
        stage('Delete backend image') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q danieldi/backend)" != "" ]]; then
                        docker stop back-end
                        docker rm back-end
                        docker rmi danieldi/backend
                    fi
                    '''.stripIndent()
                )
            }
        }
        stage('Delete frontend image') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q danieldi/front)" != "" ]]; then
                        docker stop font-end
                        docker rm font-end
                        docker rmi danieldi/front
                    fi
                    '''.stripIndent()
                )
            }
        }

        stage('Create Network') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker network ls | grep my-net )" == "" ]] ; then
                        docker network create my-net
                    fi
                    '''.stripIndent()
                )

            }
        }
        stage('Run postgres') {
            steps {
                sh 'docker run --name my-postgres --network="my-net" --ip 122.22.0.2 -e POSTGRES_PASSWORD=secret -p 5432:5432 -d postgres'
            }
        }
        stage('Run backend') {
            steps {
                sh 'docker run --name back-end --network="my-net" --ip 122.22.0.22 -p 8090:8080 -d danieldi/backend'
            }
        }
        stage('Run frontend') {
            steps {
                sh 'docker run --name font-end --network="my-net" --ip 122.22.0.32 -p 4200:4200 -d danieldi/front'
            }
        }
    }
}
