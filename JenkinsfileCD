pipeline {
    agent any
    stages{
        stage('Delete backend container') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q danieldi/backend)" != "" ]]; then
                        docker stop back-end
                        docker rm back-end
                    fi
                    '''.stripIndent()
                )
            }
        }
        stage('Delete frontend container') {
            steps {
                sh(returnStdout: true, script: '''#!/bin/bash
                    if [[ "$(docker images -q danieldi/front)" != "" ]]; then
                        docker stop front-end
                        docker rm front-end
                    fi
                    '''.stripIndent()
                )
            }
        }
        stage('Run backend') {
            steps {
                sh 'docker run --name back-end -e DB_HOST=group7-rds.cqqmj66dxtlw.us-east-1.rds.amazonaws.com -p 8090:8080 -d danieldi/backend'
            }
        }
        stage('Run frontend') {
            steps {
                // sh 'docker run --name front-end -e BACKEND_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' back-end) -p 4200:4200 -d danieldi/front'
                sh 'docker run --name front-end -e BACKEND_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' back-end) -p 4200:4200 -d danieldi/front'
            }
        }
    }
}


